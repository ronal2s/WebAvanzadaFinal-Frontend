{"ast":null,"code":"import { SWITCH_LANGUAGE, TOGGLE_COLLAPSED_NAV, WINDOW_WIDTH } from \"constants/ActionTypes\";\nimport { LAYOUT_TYPE, NAV_STYLE, THEME_COLOR, THEME_TYPE } from \"../../constants/ThemeSetting\";\nimport * as types from '../types/auth';\nexport function toggleCollapsedSideNav(navCollapsed) {\n  return {\n    type: TOGGLE_COLLAPSED_NAV,\n    navCollapsed\n  };\n}\nexport function updateWindowWidth(width) {\n  return dispatch => {\n    dispatch({\n      type: WINDOW_WIDTH,\n      width\n    });\n  };\n}\nexport function setThemeType(themeType) {\n  return dispatch => {\n    dispatch({\n      type: THEME_TYPE,\n      themeType\n    });\n  };\n}\nexport function setThemeColor(themeColor) {\n  return dispatch => {\n    dispatch({\n      type: THEME_COLOR,\n      themeColor\n    });\n  };\n}\nexport function onNavStyleChange(navStyle) {\n  return dispatch => {\n    dispatch({\n      type: NAV_STYLE,\n      navStyle\n    });\n  };\n}\nexport function onLayoutTypeChange(layoutType) {\n  return dispatch => {\n    dispatch({\n      type: LAYOUT_TYPE,\n      layoutType\n    });\n  };\n}\nexport function switchLanguage(locale) {\n  return dispatch => {\n    dispatch({\n      type: SWITCH_LANGUAGE,\n      payload: locale\n    });\n  };\n}\nexport function signIn(data) {\n  return {\n    type: types.SIGN_IN.WATCHER,\n    payload: data\n  };\n}","map":{"version":3,"sources":["/Users/renysdelacruz/Downloads/ProyectoFinal-WebAvanzada-master/proyecto_final_frontend/src/appRedux/actions/Setting.js"],"names":["SWITCH_LANGUAGE","TOGGLE_COLLAPSED_NAV","WINDOW_WIDTH","LAYOUT_TYPE","NAV_STYLE","THEME_COLOR","THEME_TYPE","types","toggleCollapsedSideNav","navCollapsed","type","updateWindowWidth","width","dispatch","setThemeType","themeType","setThemeColor","themeColor","onNavStyleChange","navStyle","onLayoutTypeChange","layoutType","switchLanguage","locale","payload","signIn","data","SIGN_IN","WATCHER"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,oBAA1B,EAAgDC,YAAhD,QAAoE,uBAApE;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,EAA8CC,UAA9C,QAAgE,8BAAhE;AACA,OAAO,KAAKC,KAAZ,MAAuB,eAAvB;AAGA,OAAO,SAASC,sBAAT,CAAgCC,YAAhC,EAA8C;AACnD,SAAO;AAAEC,IAAAA,IAAI,EAAET,oBAAR;AAA8BQ,IAAAA;AAA9B,GAAP;AACD;AAED,OAAO,SAASE,iBAAT,CAA2BC,KAA3B,EAAkC;AACvC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAER,YAAR;AAAsBU,MAAAA;AAAtB,KAAD,CAAR;AACD,GAFD;AAID;AAED,OAAO,SAASE,YAAT,CAAsBC,SAAtB,EAAiC;AACtC,SAAQF,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEJ,UAAR;AAAoBS,MAAAA;AAApB,KAAD,CAAR;AACD,GAFD;AAGD;AAED,OAAO,SAASC,aAAT,CAAuBC,UAAvB,EAAmC;AACxC,SAAQJ,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEL,WAAR;AAAqBY,MAAAA;AAArB,KAAD,CAAR;AACD,GAFD;AAGD;AAED,OAAO,SAASC,gBAAT,CAA0BC,QAA1B,EAAoC;AACzC,SAAQN,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEN,SAAR;AAAmBe,MAAAA;AAAnB,KAAD,CAAR;AACD,GAFD;AAGD;AAED,OAAO,SAASC,kBAAT,CAA4BC,UAA5B,EAAwC;AAC7C,SAAQR,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEP,WAAR;AAAqBkB,MAAAA;AAArB,KAAD,CAAR;AACD,GAFD;AAGD;AAED,OAAO,SAASC,cAAT,CAAwBC,MAAxB,EAAgC;AACrC,SAAQV,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AACPH,MAAAA,IAAI,EAAEV,eADC;AAEPwB,MAAAA,OAAO,EAAED;AAFF,KAAD,CAAR;AAID,GALD;AAMD;AAED,OAAO,SAASE,MAAT,CAAgBC,IAAhB,EAAsB;AAC3B,SAAO;AACLhB,IAAAA,IAAI,EAAEH,KAAK,CAACoB,OAAN,CAAcC,OADf;AAELJ,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID","sourcesContent":["import { SWITCH_LANGUAGE, TOGGLE_COLLAPSED_NAV, WINDOW_WIDTH } from \"constants/ActionTypes\";\nimport { LAYOUT_TYPE, NAV_STYLE, THEME_COLOR, THEME_TYPE } from \"../../constants/ThemeSetting\";\nimport * as types from '../types/auth';\n\n\nexport function toggleCollapsedSideNav(navCollapsed) {\n  return { type: TOGGLE_COLLAPSED_NAV, navCollapsed };\n}\n\nexport function updateWindowWidth(width) {\n  return (dispatch) => {\n    dispatch({ type: WINDOW_WIDTH, width });\n  }\n\n}\n\nexport function setThemeType(themeType) {\n  return (dispatch) => {\n    dispatch({ type: THEME_TYPE, themeType });\n  }\n}\n\nexport function setThemeColor(themeColor) {\n  return (dispatch) => {\n    dispatch({ type: THEME_COLOR, themeColor });\n  }\n}\n\nexport function onNavStyleChange(navStyle) {\n  return (dispatch) => {\n    dispatch({ type: NAV_STYLE, navStyle });\n  }\n}\n\nexport function onLayoutTypeChange(layoutType) {\n  return (dispatch) => {\n    dispatch({ type: LAYOUT_TYPE, layoutType });\n  }\n}\n\nexport function switchLanguage(locale) {\n  return (dispatch) => {\n    dispatch({\n      type: SWITCH_LANGUAGE,\n      payload: locale\n    });\n  }\n}\n\nexport function signIn(data) {\n  return {\n    type: types.SIGN_IN.WATCHER,\n    payload: data\n  }\n}\n"]},"metadata":{},"sourceType":"module"}