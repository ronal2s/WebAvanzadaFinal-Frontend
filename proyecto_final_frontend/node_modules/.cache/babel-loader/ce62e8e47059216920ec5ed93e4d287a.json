{"ast":null,"code":"var _jsxFileName = \"/Users/renysdelacruz/Downloads/ProyectoFinal-WebAvanzada-master/proyecto_final_frontend/src/core/graphs/containers/GraphContainer.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { BarChart, ResponsiveContainer, Bar, XAxis, YAxis, PieChart, Pie, Cell, Legend } from 'recharts';\nimport { Tooltip, Row, Col, Card } from 'antd';\nimport Content from '../../../util/Content';\nimport { fetchGraphs } from './services';\nimport IntlMessages from \"../../../util/IntlMessages\"; // const data = [\n//   { name: 'Group A', value: 6 },\n//   { name: 'Group B', value: 1 },\n// ];\n\nconst COLORS = ['#0088FE', '#00C49F'];\nconst RADIAN = Math.PI / 180;\n\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n  index\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  return /*#__PURE__*/React.createElement(\"text\", {\n    x: x,\n    y: y,\n    fill: \"white\",\n    textAnchor: x > cx ? 'start' : 'end',\n    dominantBaseline: \"central\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, `${(percent * 100).toFixed(0)}%`);\n};\n\nconst convertData = array => {\n  const label = Object.keys(array);\n  return label.map(e => {\n    return {\n      name: array[e].name,\n      Cantidad: array[e].count\n    };\n  });\n};\n\nconst useFetchGraphs = () => {\n  const [data, setData] = useState([]);\n  const [realizados, setRealizados] = useState([]);\n  const fetch = useCallback(async params => {\n    const res = await fetchGraphs(params);\n    const dataRes = [{\n      name: 'Pendientes',\n      value: res.cantPedidosPediente\n    }, {\n      name: 'Realizados',\n      value: res.cantPedidosRealizados\n    }];\n    const graphData = convertData(res.data);\n    setData(dataRes);\n    setRealizados(graphData);\n  }, []);\n  useEffect(() => {\n    fetch();\n  }, [fetch]);\n  return {\n    fetch,\n    data,\n    setData,\n    realizados\n  };\n};\n\nconst GraphContainer = () => {\n  const {\n    fetch,\n    data,\n    setData,\n    realizados\n  } = useFetchGraphs();\n  return /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"History\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PieChart, {\n    width: 1000,\n    height: 1000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Legend, {\n    verticalAlign: \"top\",\n    height: 36,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Pie, {\n    data: data,\n    cx: \"50%\",\n    cy: \"50%\",\n    labelLine: false,\n    label: renderCustomizedLabel,\n    outerRadius: 80,\n    fill: \"#8884d8\",\n    dataKey: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, data.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n    key: `cell-${index}`,\n    fill: COLORS[index % COLORS.length],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 50\n    }\n  })))))))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"Today\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 750,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: realizados,\n    margin: {\n      top: 0,\n      right: 0,\n      left: 0,\n      bottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"Quantity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 31\n      }\n    }),\n    stackId: \"a\",\n    fill: \"#10316B\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default GraphContainer;","map":{"version":3,"sources":["/Users/renysdelacruz/Downloads/ProyectoFinal-WebAvanzada-master/proyecto_final_frontend/src/core/graphs/containers/GraphContainer.js"],"names":["React","useState","useCallback","useEffect","BarChart","ResponsiveContainer","Bar","XAxis","YAxis","PieChart","Pie","Cell","Legend","Tooltip","Row","Col","Card","Content","fetchGraphs","IntlMessages","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","toFixed","convertData","array","label","Object","keys","map","e","name","Cantidad","count","useFetchGraphs","data","setData","realizados","setRealizados","fetch","params","res","dataRes","value","cantPedidosPediente","cantPedidosRealizados","graphData","GraphContainer","entry","length","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { BarChart, ResponsiveContainer, Bar, XAxis, YAxis, PieChart, Pie, Cell, Legend } from 'recharts';\nimport { Tooltip, Row, Col, Card } from 'antd';\nimport Content from '../../../util/Content';\nimport { fetchGraphs } from './services';\nimport IntlMessages from \"../../../util/IntlMessages\";\n\n// const data = [\n//   { name: 'Group A', value: 6 },\n//   { name: 'Group B', value: 1 },\n// ];\nconst COLORS = ['#0088FE', '#00C49F'];\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\nconst convertData = (array) => {\n  const label = Object.keys(array);\n\n  return label.map(e => {\n    return { name: array[e].name, Cantidad: array[e].count };\n  });\n}\n\nconst useFetchGraphs = () => {\n  const [data, setData] = useState([]);\n  const [realizados, setRealizados] = useState([]);\n\n  const fetch = useCallback(\n    async params => {\n      const res = await fetchGraphs(params);\n      const dataRes = [\n        { name: 'Pendientes', value: res.cantPedidosPediente },\n        { name: 'Realizados', value: res.cantPedidosRealizados }\n      ];\n      const graphData = convertData(res.data);\n      setData(dataRes);\n      setRealizados(graphData);\n    },\n    [],\n  )\n\n  useEffect(() => {\n    fetch();\n  }, [fetch]);\n\n  return { fetch, data, setData, realizados };\n}\n\n\nconst GraphContainer = () => {\n\n  const { fetch, data, setData, realizados } = useFetchGraphs();\n\n  return (\n    <Content>\n      <Row>\n        <Col xs={24} md={12}>\n          <Card title={<IntlMessages id=\"History\" />}>\n            <Row>\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <PieChart width={1000} height={1000}>\n                  <Legend verticalAlign=\"top\" height={36} />\n                  <Pie\n                    data={data}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    labelLine={false}\n                    label={renderCustomizedLabel}\n                    outerRadius={80}\n                    fill=\"#8884d8\"\n                    dataKey=\"value\"\n                  >\n                    {\n                      data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                    }\n                  </Pie>\n                </PieChart>\n              </ResponsiveContainer>\n            </Row>\n          </Card>\n        </Col>\n        <Col xs={24} md={12}>\n          <Card title={<IntlMessages id=\"Today\" />}>\n            <ResponsiveContainer width=\"100%\" height={750}>\n              <BarChart data={realizados}\n                margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey={<IntlMessages id=\"Quantity\" />} stackId=\"a\" fill=\"#10316B\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </Card>\n        </Col>\n      </Row>\n    </Content >\n  )\n};\n\nexport default GraphContainer;\n"]},"metadata":{},"sourceType":"module"}