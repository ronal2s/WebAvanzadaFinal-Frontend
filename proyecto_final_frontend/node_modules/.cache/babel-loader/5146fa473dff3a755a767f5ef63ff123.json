{"ast":null,"code":"var _jsxFileName = \"/Users/renysdelacruz/Downloads/ProyectoFinal-WebAvanzada-master/proyecto_final_frontend/src/containers/Sidebar/SidebarLogo.js\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { onNavStyleChange, toggleCollapsedSideNav } from \"appRedux/actions/Setting\";\nimport { NAV_STYLE_DRAWER, NAV_STYLE_FIXED, NAV_STYLE_MINI_SIDEBAR, NAV_STYLE_NO_HEADER_MINI_SIDEBAR, TAB_SIZE, THEME_TYPE_LITE } from \"../../constants/ThemeSetting\";\n\nconst SidebarLogo = () => {\n  const dispatch = useDispatch();\n  const {\n    width,\n    themeType,\n    navCollapsed\n  } = useSelector(({\n    settings\n  }) => settings);\n  let navStyle = useSelector(({\n    settings\n  }) => settings.navStyle);\n\n  if (width < TAB_SIZE && navStyle === NAV_STYLE_FIXED) {\n    navStyle = NAV_STYLE_DRAWER;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gx-layout-sider-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, navStyle === NAV_STYLE_FIXED || navStyle === NAV_STYLE_MINI_SIDEBAR ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gx-linebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 80\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: `gx-icon-btn icon icon-${navStyle === NAV_STYLE_MINI_SIDEBAR ? 'menu-unfold' : 'menu-fold'} ${themeType !== THEME_TYPE_LITE ? 'gx-text-white' : ''}`,\n    onClick: () => {\n      if (navStyle === NAV_STYLE_DRAWER) {\n        dispatch(toggleCollapsedSideNav(!navCollapsed));\n      } else if (navStyle === NAV_STYLE_FIXED) {\n        dispatch(onNavStyleChange(NAV_STYLE_MINI_SIDEBAR));\n      } else if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR) {\n        dispatch(toggleCollapsedSideNav(!navCollapsed));\n      } else {\n        dispatch(onNavStyleChange(NAV_STYLE_FIXED));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })) : null);\n};\n\nexport default SidebarLogo;","map":{"version":3,"sources":["/Users/renysdelacruz/Downloads/ProyectoFinal-WebAvanzada-master/proyecto_final_frontend/src/containers/Sidebar/SidebarLogo.js"],"names":["React","useDispatch","useSelector","Link","onNavStyleChange","toggleCollapsedSideNav","NAV_STYLE_DRAWER","NAV_STYLE_FIXED","NAV_STYLE_MINI_SIDEBAR","NAV_STYLE_NO_HEADER_MINI_SIDEBAR","TAB_SIZE","THEME_TYPE_LITE","SidebarLogo","dispatch","width","themeType","navCollapsed","settings","navStyle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAEA,SAAQC,gBAAR,EAA0BC,sBAA1B,QAAuD,0BAAvD;AACA,SACEC,gBADF,EAEEC,eAFF,EAGEC,sBAHF,EAIEC,gCAJF,EAKEC,QALF,EAMEC,eANF,QAOO,8BAPP;;AAUA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM;AAACa,IAAAA,KAAD;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA;AAAnB,MAAmCd,WAAW,CAAC,CAAC;AAACe,IAAAA;AAAD,GAAD,KAAgBA,QAAjB,CAApD;AACA,MAAIC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;AAACe,IAAAA;AAAD,GAAD,KAAgBA,QAAQ,CAACC,QAA1B,CAA1B;;AACA,MAAIJ,KAAK,GAAGJ,QAAR,IAAoBQ,QAAQ,KAAKX,eAArC,EAAsD;AACpDW,IAAAA,QAAQ,GAAGZ,gBAAX;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIY,QAAQ,KAAKX,eAAb,IAAgCW,QAAQ,KAAKV,sBAA9C,gBAAwE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEvE;AACE,IAAA,SAAS,EAAG,yBAAwBU,QAAQ,KAAKV,sBAAb,GAAsC,aAAtC,GAAsD,WAAY,IAAGO,SAAS,KAAKJ,eAAd,GAAgC,eAAhC,GAAkD,EAAG,EADhK;AAEE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIO,QAAQ,KAAKZ,gBAAjB,EAAmC;AACjCO,QAAAA,QAAQ,CAACR,sBAAsB,CAAC,CAACW,YAAF,CAAvB,CAAR;AACD,OAFD,MAEO,IAAIE,QAAQ,KAAKX,eAAjB,EAAkC;AACvCM,QAAAA,QAAQ,CAACT,gBAAgB,CAACI,sBAAD,CAAjB,CAAR;AACD,OAFM,MAEA,IAAIU,QAAQ,KAAKT,gCAAjB,EAAmD;AACxDI,QAAAA,QAAQ,CAACR,sBAAsB,CAAC,CAACW,YAAF,CAAvB,CAAR;AACD,OAFM,MAEA;AACLH,QAAAA,QAAQ,CAACT,gBAAgB,CAACG,eAAD,CAAjB,CAAR;AACD;AACF,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFuE,CAAxE,GAgBQ,IAlBX,CADF;AAwBD,CA/BD;;AAiCA,eAAeK,WAAf","sourcesContent":["import React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\n\nimport {onNavStyleChange, toggleCollapsedSideNav} from \"appRedux/actions/Setting\";\nimport {\n  NAV_STYLE_DRAWER,\n  NAV_STYLE_FIXED,\n  NAV_STYLE_MINI_SIDEBAR,\n  NAV_STYLE_NO_HEADER_MINI_SIDEBAR,\n  TAB_SIZE,\n  THEME_TYPE_LITE\n} from \"../../constants/ThemeSetting\";\n\n\nconst SidebarLogo = () => {\n  const dispatch = useDispatch();\n  const {width, themeType, navCollapsed} = useSelector(({settings}) => settings);\n  let navStyle = useSelector(({settings}) => settings.navStyle);\n  if (width < TAB_SIZE && navStyle === NAV_STYLE_FIXED) {\n    navStyle = NAV_STYLE_DRAWER;\n  }\n  return (\n    <div className=\"gx-layout-sider-header\">\n\n      {(navStyle === NAV_STYLE_FIXED || navStyle === NAV_STYLE_MINI_SIDEBAR) ? <div className=\"gx-linebar\">\n\n        <i\n          className={`gx-icon-btn icon icon-${navStyle === NAV_STYLE_MINI_SIDEBAR ? 'menu-unfold' : 'menu-fold'} ${themeType !== THEME_TYPE_LITE ? 'gx-text-white' : ''}`}\n          onClick={() => {\n            if (navStyle === NAV_STYLE_DRAWER) {\n              dispatch(toggleCollapsedSideNav(!navCollapsed));\n            } else if (navStyle === NAV_STYLE_FIXED) {\n              dispatch(onNavStyleChange(NAV_STYLE_MINI_SIDEBAR))\n            } else if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR) {\n              dispatch(toggleCollapsedSideNav(!navCollapsed));\n            } else {\n              dispatch(onNavStyleChange(NAV_STYLE_FIXED))\n            }\n          }}\n        />\n      </div> : null}\n\n\n    </div>\n  );\n};\n\nexport default SidebarLogo;\n"]},"metadata":{},"sourceType":"module"}