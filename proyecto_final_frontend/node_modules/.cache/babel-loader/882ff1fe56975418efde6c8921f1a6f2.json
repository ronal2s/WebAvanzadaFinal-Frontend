{"ast":null,"code":"import { call, put, all, takeLatest } from 'redux-saga/effects';\nimport * as types from '../types/auth';\nimport { signIn, setAuthValuesInLocalStorage, successMessage } from '../../rayoDevCore/utils';\n\nfunction* signInSaga(action) {\n  const {\n    username,\n    password\n  } = action.payload;\n\n  try {\n    const login = yield call(signIn, username, password);\n    const auth = {\n      token: login.accessToken,\n      userId: login.userId\n    };\n    setAuthValuesInLocalStorage(auth);\n    yield put({\n      type: types.SIGN_IN.SUCCESS,\n      payload: {\n        token: auth.token,\n        userId: auth.userId\n      }\n    });\n    successMessage('Logueado correctamente');\n    console.log(login);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* sagaRoute() {\n  yield all([takeLatest(types.SIGN_IN.WATCHER, signInSaga)]);\n}","map":{"version":3,"sources":["/Users/renysdelacruz/Downloads/ProyectoFinal-WebAvanzada-master/proyecto_final_frontend/src/appRedux/sagas/auth.js"],"names":["call","put","all","takeLatest","types","signIn","setAuthValuesInLocalStorage","successMessage","signInSaga","action","username","password","payload","login","auth","token","accessToken","userId","type","SIGN_IN","SUCCESS","console","log","err","sagaRoute","WATCHER"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,OAAO,KAAKC,KAAZ,MAAuB,eAAvB;AACA,SAASC,MAAT,EAAiBC,2BAAjB,EAA8CC,cAA9C,QAAoE,yBAApE;;AAEA,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AAC3B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBF,MAAM,CAACG,OAAtC;;AACA,MAAI;AACF,UAAMC,KAAK,GAAG,MAAMb,IAAI,CAACK,MAAD,EAASK,QAAT,EAAmBC,QAAnB,CAAxB;AACA,UAAMG,IAAI,GAAG;AACXC,MAAAA,KAAK,EAAEF,KAAK,CAACG,WADF;AAEXC,MAAAA,MAAM,EAAEJ,KAAK,CAACI;AAFH,KAAb;AAIAX,IAAAA,2BAA2B,CAACQ,IAAD,CAA3B;AACA,UAAMb,GAAG,CAAC;AAAEiB,MAAAA,IAAI,EAAEd,KAAK,CAACe,OAAN,CAAcC,OAAtB;AAA+BR,MAAAA,OAAO,EAAE;AAAEG,QAAAA,KAAK,EAAED,IAAI,CAACC,KAAd;AAAqBE,QAAAA,MAAM,EAAEH,IAAI,CAACG;AAAlC;AAAxC,KAAD,CAAT;AACAV,IAAAA,cAAc,CAAC,wBAAD,CAAd;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACD,GAVD,CAUE,OAAOU,GAAP,EAAY;AACZF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;;AAED,eAAe,UAAUC,SAAV,GAAsB;AACnC,QAAMtB,GAAG,CAAC,CACRC,UAAU,CAACC,KAAK,CAACe,OAAN,CAAcM,OAAf,EAAwBjB,UAAxB,CADF,CAAD,CAAT;AAGD","sourcesContent":["import { call, put, all, takeLatest } from 'redux-saga/effects';\nimport * as types from '../types/auth';\nimport { signIn, setAuthValuesInLocalStorage, successMessage } from '../../rayoDevCore/utils';\n\nfunction* signInSaga(action) {\n  const { username, password } = action.payload;\n  try {\n    const login = yield call(signIn, username, password);\n    const auth = {\n      token: login.accessToken,\n      userId: login.userId\n    }\n    setAuthValuesInLocalStorage(auth);\n    yield put({ type: types.SIGN_IN.SUCCESS, payload: { token: auth.token, userId: auth.userId } })\n    successMessage('Logueado correctamente')\n    console.log(login);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* sagaRoute() {\n  yield all([\n    takeLatest(types.SIGN_IN.WATCHER, signInSaga)\n  ])\n}\n"]},"metadata":{},"sourceType":"module"}