{"ast":null,"code":"import { helperTypes } from './helperTypes';\n/**\n * Create all types app\n * @param typeString\n * @return {any}\n */\n\nexport const createTypes = typeString => {\n  return Object.values(helperTypes).reduce((accumulator, currentValue) => {\n    accumulator[currentValue] = `${typeString}_${currentValue}`;\n    return accumulator;\n  }, {});\n};\n/**\n * Action creator for\n * @param type\n * @param payload\n * @return {{type: *}}\n */\n\nexport const createAction = (type, payload = {}) => ({\n  type,\n  ...payload\n});\n/**\n * create object to use with pagination in select\n * @return {{paginationMore: boolean, currentPage: number}}\n */\n\nexport const createPaginationSelectObject = () => {\n  return {\n    paginationMore: true,\n    currentPage: 1\n  };\n};\n/**\n * Impure function that returns another function with state and action or returns the initial state\n * @param initialState\n * @param handlers\n * @return {function(*=, *=): *}\n */\n\nexport const createReducer = (initialState, handlers) => (state = initialState, action) => handlers.hasOwnProperty(action.type) ? handlers[action.type](state, action) : state;","map":{"version":3,"sources":["/Users/renysdelacruz/Downloads/ProyectoFinal-WebAvanzada-master/proyecto_final_frontend/src/appRedux/helpers/reduxHelper.js"],"names":["helperTypes","createTypes","typeString","Object","values","reduce","accumulator","currentValue","createAction","type","payload","createPaginationSelectObject","paginationMore","currentPage","createReducer","initialState","handlers","state","action","hasOwnProperty"],"mappings":"AAAA,SAASA,WAAT,QAA4B,eAA5B;AAEA;;;;;;AAKA,OAAO,MAAMC,WAAW,GAAGC,UAAU,IAAI;AACvC,SAAOC,MAAM,CAACC,MAAP,CAAcJ,WAAd,EAA2BK,MAA3B,CAAkC,CAACC,WAAD,EAAcC,YAAd,KAA+B;AACtED,IAAAA,WAAW,CAACC,YAAD,CAAX,GAA6B,GAAEL,UAAW,IAAGK,YAAa,EAA1D;AACA,WAAOD,WAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID,CALM;AAOP;;;;;;;AAMA,OAAO,MAAME,YAAY,GAAG,CAACC,IAAD,EAAOC,OAAO,GAAG,EAAjB,MAAyB;AAAED,EAAAA,IAAF;AAAQ,KAAGC;AAAX,CAAzB,CAArB;AAEP;;;;;AAIA,OAAO,MAAMC,4BAA4B,GAAG,MAAM;AAChD,SAAO;AACLC,IAAAA,cAAc,EAAE,IADX;AAELC,IAAAA,WAAW,EAAE;AAFR,GAAP;AAID,CALM;AAOP;;;;;;;AAMA,OAAO,MAAMC,aAAa,GAAG,CAACC,YAAD,EAAeC,QAAf,KAC3B,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KACEF,QAAQ,CAACG,cAAT,CAAwBD,MAAM,CAACT,IAA/B,IACIO,QAAQ,CAACE,MAAM,CAACT,IAAR,CAAR,CAAsBQ,KAAtB,EAA6BC,MAA7B,CADJ,GAEID,KAJD","sourcesContent":["import { helperTypes } from './helperTypes'\n\n/**\n * Create all types app\n * @param typeString\n * @return {any}\n */\nexport const createTypes = typeString => {\n  return Object.values(helperTypes).reduce((accumulator, currentValue) => {\n    accumulator[currentValue] = `${typeString}_${currentValue}`;\n    return accumulator\n  }, {});\n};\n\n/**\n * Action creator for\n * @param type\n * @param payload\n * @return {{type: *}}\n */\nexport const createAction = (type, payload = {}) => ({ type, ...payload });\n\n/**\n * create object to use with pagination in select\n * @return {{paginationMore: boolean, currentPage: number}}\n */\nexport const createPaginationSelectObject = () => {\n  return {\n    paginationMore: true,\n    currentPage: 1\n  }\n};\n\n/**\n * Impure function that returns another function with state and action or returns the initial state\n * @param initialState\n * @param handlers\n * @return {function(*=, *=): *}\n */\nexport const createReducer = (initialState, handlers) =>\n  (state = initialState, action) =>\n    handlers.hasOwnProperty(action.type)\n      ? handlers[action.type](state, action)\n      : state;\n"]},"metadata":{},"sourceType":"module"}