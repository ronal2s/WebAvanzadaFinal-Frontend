{"ast":null,"code":"var _jsxFileName = \"/Users/renysdelacruz/Downloads/ProyectoFinal-WebAvanzada-master/proyecto_final_frontend/src/core/clients/containers/ClientContainer.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { PageHeader, Button } from 'antd';\nimport TableComponent from '../components/TableComponent';\nimport Column from '../components/Column';\nimport { StandardTableWithoutPagination } from '../../../components/table/StandardTableWithoutPagination';\nimport AddClientComponent from '../components/AddClientComponent';\nimport FormClient from '../components/FormClient';\nimport { fetchUsers } from '../service';\nimport { useSelector } from 'react-redux';\nimport { parseJwt, successMessage, URL_API } from '../../../rayoDevCore/utils';\nimport IntlMessages from \"../../../util/IntlMessages\";\nimport { history } from '../../../appRedux/store';\nimport { restClientWithOutAuth } from \"../../../rayoDevCore/restClient\";\n\nconst useClientForm = () => {\n  const [useFormClient, setUseFormClient] = useState({\n    name: '',\n    password: '',\n    username: '',\n    admin: false\n  });\n  return {\n    useFormClient,\n    setUseFormClient\n  };\n}; //Agregar cliente desde administrador\n\n\nconst onSubmit = async e => {\n  successMessage('Registrado correctamente'); // console.log(e);\n\n  const data = await restClientWithOutAuth(`${URL_API}/users/auth/signup`, 'POST', e);\n  history.push('/clients');\n};\n\nconst useSwitchRenderHooks = () => {\n  const [renderState, setRenderState] = useState('');\n  const {\n    useFormClient\n  } = useClientForm();\n  const authToken = useSelector(({\n    settings\n  }) => settings.authUser);\n  const user = authToken.token ? parseJwt(authToken.token)['user'] : null;\n  const renderSwitch = useCallback(async params => {\n    setRenderState(params);\n  }, [setRenderState]);\n  useEffect(() => {\n    if (user != null && user.admin == false) {\n      history.push('/orders');\n    }\n  }, []);\n\n  const RenderComponent = () => {\n    switch (renderState) {\n      case 'RENDER_ADD':\n        {\n          return /*#__PURE__*/React.createElement(AddClientComponent, {\n            extra: /*#__PURE__*/React.createElement(Button, {\n              type: \"danger\",\n              onClick: () => setRenderState(null),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 18\n              }\n            }, /*#__PURE__*/React.createElement(IntlMessages, {\n              id: \"Back\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 77\n              }\n            })),\n            Name: /*#__PURE__*/React.createElement(\"h3\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(IntlMessages, {\n              id: \"Add Customer\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }\n            })),\n            Form: /*#__PURE__*/React.createElement(FormClient, {\n              initialValues: useFormClient,\n              onSubmit: onSubmit,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 16\n            }\n          });\n        }\n\n      default:\n        {\n          return /*#__PURE__*/React.createElement(TableComponent, {\n            Name: /*#__PURE__*/React.createElement(\"h3\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(IntlMessages, {\n              id: \"Customers\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }\n            })),\n            onSwitch: renderSwitch,\n            user: user,\n            Table: /*#__PURE__*/React.createElement(StandardTableWithoutPagination, {\n              fetchFromService: fetchUsers,\n              fetchService: true,\n              columns: Column(),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 18\n              }\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }\n          });\n        }\n    }\n  };\n\n  return {\n    renderState,\n    renderSwitch,\n    RenderComponent\n  };\n};\n\nconst ClientContainer = () => {\n  const {\n    renderState,\n    renderSwitch,\n    RenderComponent\n  } = useSwitchRenderHooks();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeader, {\n    title: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"Customers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 16\n      }\n    }),\n    subTitle: ` `,\n    ghost: true,\n    style: {\n      textEmphasisColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(RenderComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ClientContainer;","map":{"version":3,"sources":["/Users/renysdelacruz/Downloads/ProyectoFinal-WebAvanzada-master/proyecto_final_frontend/src/core/clients/containers/ClientContainer.js"],"names":["React","useState","useCallback","useEffect","PageHeader","Button","TableComponent","Column","StandardTableWithoutPagination","AddClientComponent","FormClient","fetchUsers","useSelector","parseJwt","successMessage","URL_API","IntlMessages","history","restClientWithOutAuth","useClientForm","useFormClient","setUseFormClient","name","password","username","admin","onSubmit","e","data","push","useSwitchRenderHooks","renderState","setRenderState","authToken","settings","authUser","user","token","renderSwitch","params","RenderComponent","ClientContainer","textEmphasisColor"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\nimport { PageHeader, Button } from 'antd';\nimport TableComponent from '../components/TableComponent';\nimport Column from '../components/Column';\nimport { StandardTableWithoutPagination } from '../../../components/table/StandardTableWithoutPagination';\nimport AddClientComponent from '../components/AddClientComponent';\nimport FormClient from '../components/FormClient';\nimport { fetchUsers } from '../service';\nimport { useSelector } from 'react-redux';\nimport { parseJwt, successMessage, URL_API } from '../../../rayoDevCore/utils';\nimport IntlMessages from \"../../../util/IntlMessages\";\nimport { history } from '../../../appRedux/store';\nimport { restClientWithOutAuth } from \"../../../rayoDevCore/restClient\";\n\nconst useClientForm = () => {\n  const [useFormClient, setUseFormClient] = useState({\n    name: '',\n    password: '',\n    username: '',\n    admin: false,\n  })\n\n  return { useFormClient, setUseFormClient };\n};\n\n//Agregar cliente desde administrador\nconst onSubmit = async (e) => {\n  successMessage('Registrado correctamente');\n  // console.log(e);\n  const data = await restClientWithOutAuth(`${URL_API}/users/auth/signup`, 'POST', e);\n  history.push('/clients');\n}\n\nconst useSwitchRenderHooks = () => {\n  const [renderState, setRenderState] = useState('');\n  const { useFormClient } = useClientForm();\n\n  const authToken = useSelector(({ settings }) => settings.authUser);\n  const user = authToken.token ? parseJwt(authToken.token)['user'] : null;\n\n  const renderSwitch = useCallback(\n    async params => {\n      setRenderState(params);\n    },\n    [setRenderState],\n  );\n\n  useEffect(() => {\n    if (user != null && user.admin == false) {\n      history.push('/orders')\n    }\n  }, [])\n\n  const RenderComponent = () => {\n    switch (renderState) {\n      case 'RENDER_ADD': {\n        return <AddClientComponent\n          extra={<Button type=\"danger\" onClick={() => setRenderState(null)}><IntlMessages id=\"Back\" /></Button>}\n          Name={<h3><IntlMessages id=\"Add Customer\" /></h3>}\n          Form={<FormClient\n            initialValues={useFormClient}\n            onSubmit={onSubmit}\n          />}\n        />;\n      }\n      default: {\n        return (<TableComponent\n          Name={<h3><IntlMessages id=\"Customers\" /></h3>}\n          onSwitch={renderSwitch}\n          user={user}\n          Table={<StandardTableWithoutPagination\n            fetchFromService={fetchUsers}\n            fetchService={true}\n            columns={Column()}\n          />}\n        />)\n      }\n    }\n  }\n\n  return { renderState, renderSwitch, RenderComponent }\n};\n\n\nconst ClientContainer = () => {\n  const { renderState, renderSwitch, RenderComponent } = useSwitchRenderHooks();\n  return (\n    <>\n      <PageHeader\n        title={<IntlMessages id=\"Customers\" />}\n        subTitle={` `}\n        ghost={true}\n        style={{textEmphasisColor: \"white\"}}\n      />\n      <RenderComponent />\n    </>\n  )\n}\n\nexport default ClientContainer;\n"]},"metadata":{},"sourceType":"module"}