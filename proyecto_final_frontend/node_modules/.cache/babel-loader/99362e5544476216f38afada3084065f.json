{"ast":null,"code":"var _jsxFileName = \"/Users/renysdelacruz/Downloads/ProyectoFinal-WebAvanzada-master/proyecto_final_frontend/src/containers/Sidebar/index.js\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Drawer, Layout } from \"antd\";\nimport SidebarContent from \"./SidebarContent\";\nimport { toggleCollapsedSideNav, updateWindowWidth } from \"appRedux/actions/Setting\";\nimport { NAV_STYLE_DRAWER, NAV_STYLE_FIXED, NAV_STYLE_MINI_SIDEBAR, NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR, NAV_STYLE_NO_HEADER_MINI_SIDEBAR, TAB_SIZE, THEME_TYPE_LITE } from \"../../constants/ThemeSetting\";\nconst {\n  Sider\n} = Layout;\n\nconst Sidebar = () => {\n  const dispatch = useDispatch();\n  const {\n    themeType,\n    navCollapsed,\n    width,\n    navStyle\n  } = useSelector(({\n    settings\n  }) => settings);\n\n  const onToggleCollapsedNav = () => {\n    dispatch(toggleCollapsedSideNav(!navCollapsed));\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', () => {\n      dispatch(updateWindowWidth(window.innerWidth));\n    });\n  }, [dispatch]);\n  let drawerStyle = \"gx-collapsed-sidebar\";\n\n  if (navStyle === NAV_STYLE_FIXED) {\n    drawerStyle = \"\";\n  } else if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR) {\n    drawerStyle = \"gx-mini-sidebar gx-mini-custom-sidebar\";\n  } else if (navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR) {\n    drawerStyle = \"gx-custom-sidebar\";\n  } else if (navStyle === NAV_STYLE_MINI_SIDEBAR) {\n    drawerStyle = \"gx-mini-sidebar\";\n  } else if (navStyle === NAV_STYLE_DRAWER) {\n    drawerStyle = \"gx-collapsed-sidebar\";\n  }\n\n  if ((navStyle === NAV_STYLE_FIXED || navStyle === NAV_STYLE_MINI_SIDEBAR || navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR) && width < TAB_SIZE) {\n    drawerStyle = \"gx-collapsed-sidebar\";\n  }\n\n  return /*#__PURE__*/React.createElement(Sider, {\n    className: `gx-app-sidebar ${drawerStyle} ${themeType !== THEME_TYPE_LITE ? 'gx-layout-sider-dark' : null}`,\n    trigger: null,\n    collapsed: width < TAB_SIZE ? false : navStyle === NAV_STYLE_MINI_SIDEBAR || navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR,\n    theme: themeType === THEME_TYPE_LITE ? \"lite\" : \"dark\",\n    collapsible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, navStyle === NAV_STYLE_DRAWER || width < TAB_SIZE ? /*#__PURE__*/React.createElement(Drawer, {\n    className: `gx-drawer-sidebar ${themeType !== THEME_TYPE_LITE ? 'gx-drawer-sidebar-dark' : null}`,\n    placement: \"left\",\n    closable: false,\n    onClose: onToggleCollapsedNav,\n    visible: navCollapsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SidebarContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(SidebarContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }));\n};\n\nexport default Sidebar;","map":{"version":3,"sources":["/Users/renysdelacruz/Downloads/ProyectoFinal-WebAvanzada-master/proyecto_final_frontend/src/containers/Sidebar/index.js"],"names":["React","useEffect","useDispatch","useSelector","Drawer","Layout","SidebarContent","toggleCollapsedSideNav","updateWindowWidth","NAV_STYLE_DRAWER","NAV_STYLE_FIXED","NAV_STYLE_MINI_SIDEBAR","NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR","NAV_STYLE_NO_HEADER_MINI_SIDEBAR","TAB_SIZE","THEME_TYPE_LITE","Sider","Sidebar","dispatch","themeType","navCollapsed","width","navStyle","settings","onToggleCollapsedNav","window","addEventListener","innerWidth","drawerStyle"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Drawer, Layout } from \"antd\";\n\nimport SidebarContent from \"./SidebarContent\";\nimport { toggleCollapsedSideNav, updateWindowWidth } from \"appRedux/actions/Setting\";\nimport {\n  NAV_STYLE_DRAWER,\n  NAV_STYLE_FIXED,\n  NAV_STYLE_MINI_SIDEBAR,\n  NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR,\n  NAV_STYLE_NO_HEADER_MINI_SIDEBAR,\n  TAB_SIZE,\n  THEME_TYPE_LITE\n} from \"../../constants/ThemeSetting\";\n\nconst { Sider } = Layout;\n\nconst Sidebar = () => {\n\n  const dispatch = useDispatch();\n\n  const { themeType, navCollapsed, width, navStyle } = useSelector(({ settings }) => settings);\n\n\n  const onToggleCollapsedNav = () => {\n    dispatch(toggleCollapsedSideNav(!navCollapsed));\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', () => {\n      dispatch(updateWindowWidth(window.innerWidth));\n    })\n  }, [dispatch]);\n\n\n  let drawerStyle = \"gx-collapsed-sidebar\";\n\n  if (navStyle === NAV_STYLE_FIXED) {\n    drawerStyle = \"\";\n  } else if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR) {\n    drawerStyle = \"gx-mini-sidebar gx-mini-custom-sidebar\";\n  } else if (navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR) {\n    drawerStyle = \"gx-custom-sidebar\"\n  } else if (navStyle === NAV_STYLE_MINI_SIDEBAR) {\n    drawerStyle = \"gx-mini-sidebar\";\n  } else if (navStyle === NAV_STYLE_DRAWER) {\n    drawerStyle = \"gx-collapsed-sidebar\"\n  }\n  if ((navStyle === NAV_STYLE_FIXED || navStyle === NAV_STYLE_MINI_SIDEBAR\n    || navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR) && width < TAB_SIZE) {\n    drawerStyle = \"gx-collapsed-sidebar\"\n  }\n  return (\n    <Sider\n      className={`gx-app-sidebar ${drawerStyle} ${themeType !== THEME_TYPE_LITE ? 'gx-layout-sider-dark' : null}`}\n      trigger={null}\n      collapsed={(width < TAB_SIZE ? false : navStyle === NAV_STYLE_MINI_SIDEBAR || navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR)}\n      theme={themeType === THEME_TYPE_LITE ? \"lite\" : \"dark\"}\n      collapsible>\n      {\n        navStyle === NAV_STYLE_DRAWER || width < TAB_SIZE ?\n          <Drawer\n            className={`gx-drawer-sidebar ${themeType !== THEME_TYPE_LITE ? 'gx-drawer-sidebar-dark' : null}`}\n            placement=\"left\"\n            closable={false}\n            onClose={onToggleCollapsedNav}\n            visible={navCollapsed}>\n            <SidebarContent />\n          </Drawer> :\n          <SidebarContent />\n      }\n    </Sider>)\n};\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}