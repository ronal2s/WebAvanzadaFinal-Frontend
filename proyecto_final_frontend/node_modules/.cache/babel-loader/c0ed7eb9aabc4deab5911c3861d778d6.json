{"ast":null,"code":"var _jsxFileName = \"/Users/renysdelacruz/Downloads/ProyectoFinal-WebAvanzada-master/proyecto_final_frontend/src/components/AntFields/index.js\";\nimport React from 'react';\nimport { Select, Form } from 'antd';\nimport { Controller } from 'react-hook-form';\nconst FormItem = Form.Item;\nconst {\n  Option\n} = Select;\n\nconst MyInput = ({\n  AntComponent,\n  formItemLayout,\n  label,\n  hasFeedback,\n  type,\n  control,\n  selectOptions,\n  formState,\n  errors,\n  help,\n  ...props\n}) => {\n  const fieldName = props.name;\n  const touched = formState.touched[fieldName] !== undefined ? formState.touched[fieldName] : false;\n  const submitted = formState.submitCount > 0;\n  const hasError = errors[fieldName] !== undefined ? true : false;\n  const submittedError = hasError && submitted;\n  const touchedError = hasError && touched;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormItem, Object.assign({}, formItemLayout, {\n    label: label,\n    hasFeedback: hasFeedback && submitted || hasFeedback && touched ? true : false,\n    help: hasError ? errors[fieldName].message : false,\n    validateStatus: submittedError || touchedError ? \"error\" : \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Controller, Object.assign({\n    as: /*#__PURE__*/React.createElement(AntComponent, Object.assign({\n      type: type\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }), selectOptions && selectOptions.map((value, index) => /*#__PURE__*/React.createElement(Option, {\n      key: index,\n      value: value.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 67\n      }\n    }, value.name))),\n    control: control\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }))));\n};\n\nexport default MyInput;","map":{"version":3,"sources":["/Users/renysdelacruz/Downloads/ProyectoFinal-WebAvanzada-master/proyecto_final_frontend/src/components/AntFields/index.js"],"names":["React","Select","Form","Controller","FormItem","Item","Option","MyInput","AntComponent","formItemLayout","label","hasFeedback","type","control","selectOptions","formState","errors","help","props","fieldName","name","touched","undefined","submitted","submitCount","hasError","submittedError","touchedError","message","map","value","index","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,MAAMC,QAAQ,GAAGF,IAAI,CAACG,IAAtB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaL,MAAnB;;AAEA,MAAMM,OAAO,GAAG,CAAC;AACfC,EAAAA,YADe;AAEfC,EAAAA,cAFe;AAGfC,EAAAA,KAHe;AAIfC,EAAAA,WAJe;AAKfC,EAAAA,IALe;AAMfC,EAAAA,OANe;AAOfC,EAAAA,aAPe;AAQfC,EAAAA,SARe;AASfC,EAAAA,MATe;AAUfC,EAAAA,IAVe;AAWf,KAAGC;AAXY,CAAD,KAYV;AACJ,QAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,QAAMC,OAAO,GAAGN,SAAS,CAACM,OAAV,CAAkBF,SAAlB,MAAiCG,SAAjC,GAA6CP,SAAS,CAACM,OAAV,CAAkBF,SAAlB,CAA7C,GAA4E,KAA5F;AACA,QAAMI,SAAS,GAAGR,SAAS,CAACS,WAAV,GAAwB,CAA1C;AACA,QAAMC,QAAQ,GAAGT,MAAM,CAACG,SAAD,CAAN,KAAsBG,SAAtB,GAAkC,IAAlC,GAAyC,KAA1D;AACA,QAAMI,cAAc,GAAGD,QAAQ,IAAIF,SAAnC;AACA,QAAMI,YAAY,GAAGF,QAAQ,IAAIJ,OAAjC;AAEA,sBAAQ,uDACN,oBAAC,QAAD,oBAAcZ,cAAd;AACE,IAAA,KAAK,EAAEC,KADT;AAEE,IAAA,WAAW,EACRC,WAAW,IAAIY,SAAhB,IAA+BZ,WAAW,IAAIU,OAA9C,GAAyD,IAAzD,GAAgE,KAHpE;AAKE,IAAA,IAAI,EAAEI,QAAQ,GAAGT,MAAM,CAACG,SAAD,CAAN,CAAkBS,OAArB,GAA+B,KAL/C;AAME,IAAA,cAAc,EAAEF,cAAc,IAAIC,YAAlB,GAAiC,OAAjC,GAA2C,SAN7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAQE,oBAAC,UAAD;AACE,IAAA,EAAE,eACA,oBAAC,YAAD;AACE,MAAA,IAAI,EAAEf;AADR,OACkBM,KADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEGJ,aAAa,IAAIA,aAAa,CAACe,GAAd,CAAkB,CAACC,KAAD,EAAQC,KAAR,kBAAkB,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,KAAb;AAAoB,MAAA,KAAK,EAAED,KAAK,CAACE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCF,KAAK,CAACV,IAA5C,CAApC,CAFpB,CAFJ;AAME,IAAA,OAAO,EAAEP;AANX,KAOMK,KAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KARF,CADM,CAAR;AAoBD,CAxCD;;AA0CA,eAAeX,OAAf","sourcesContent":["import React from 'react'\nimport { Select, Form } from 'antd'\nimport { Controller } from 'react-hook-form';\n\nconst FormItem = Form.Item;\nconst { Option } = Select;\n\nconst MyInput = ({\n  AntComponent,\n  formItemLayout,\n  label,\n  hasFeedback,\n  type,\n  control,\n  selectOptions,\n  formState,\n  errors,\n  help,\n  ...props\n}) => {\n  const fieldName = props.name;\n  const touched = formState.touched[fieldName] !== undefined ? formState.touched[fieldName] : false;\n  const submitted = formState.submitCount > 0;\n  const hasError = errors[fieldName] !== undefined ? true : false;\n  const submittedError = hasError && submitted;\n  const touchedError = hasError && touched;\n\n  return (<>\n    <FormItem {...formItemLayout}\n      label={label}\n      hasFeedback={\n        (hasFeedback && submitted) || (hasFeedback && touched) ? true : false\n      }\n      help={hasError ? errors[fieldName].message : false}\n      validateStatus={submittedError || touchedError ? \"error\" : \"success\"}\n    >\n      <Controller\n        as={\n          <AntComponent\n            type={type} {...props}>\n            {selectOptions && selectOptions.map((value, index) => <Option key={index} value={value.id}>{value.name}</Option>)}\n          </AntComponent>}\n        control={control}\n        {...props}\n      />\n    </FormItem>\n  </>)\n};\n\nexport default MyInput;\n"]},"metadata":{},"sourceType":"module"}