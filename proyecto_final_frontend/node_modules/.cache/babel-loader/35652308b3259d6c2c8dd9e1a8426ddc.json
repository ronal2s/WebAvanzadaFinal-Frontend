{"ast":null,"code":"import React from 'react';\nimport { call, put, all, takeLatest } from 'redux-saga/effects';\nimport * as types from './types';\nimport { getProducts } from './service';\nimport { actions } from '../../appRedux/helpers/actionCreator';\n\nfunction* fetchProducts(action) {\n  try {\n    const response = yield call(getProducts);\n    yield put(actions.success(types.FETCH_PRODUCTS.SUCCESS, {\n      products: response.data\n    }, false));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default function* sagaRoute() {\n  yield all([takeLatest(types.FETCH_PRODUCTS.WATCHER, fetchProducts)]);\n}","map":{"version":3,"sources":["/Users/renysdelacruz/Downloads/ProyectoFinal-WebAvanzada-master/proyecto_final_frontend/src/core/products/sagas.js"],"names":["React","call","put","all","takeLatest","types","getProducts","actions","fetchProducts","action","response","success","FETCH_PRODUCTS","SUCCESS","products","data","error","console","log","sagaRoute","WATCHER"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,OAAT,QAAwB,sCAAxB;;AACA,UAAUC,aAAV,CAAwBC,MAAxB,EAAgC;AAC9B,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMT,IAAI,CAACK,WAAD,CAA3B;AACA,UAAMJ,GAAG,CAACK,OAAO,CAACI,OAAR,CAAgBN,KAAK,CAACO,cAAN,CAAqBC,OAArC,EAA8C;AAAEC,MAAAA,QAAQ,EAAEJ,QAAQ,CAACK;AAArB,KAA9C,EAA2E,KAA3E,CAAD,CAAT;AAED,GAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AAGD,eAAe,UAAUG,SAAV,GAAsB;AACnC,QAAMhB,GAAG,CAAC,CACRC,UAAU,CAACC,KAAK,CAACO,cAAN,CAAqBQ,OAAtB,EAA+BZ,aAA/B,CADF,CAAD,CAAT;AAGD","sourcesContent":["import React from 'react';\nimport { call, put, all, takeLatest } from 'redux-saga/effects';\nimport * as types from './types';\nimport { getProducts } from './service';\nimport { actions } from '../../appRedux/helpers/actionCreator';\nfunction* fetchProducts(action) {\n  try {\n    const response = yield call(getProducts);\n    yield put(actions.success(types.FETCH_PRODUCTS.SUCCESS, { products: response.data }, false))\n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\nexport default function* sagaRoute() {\n  yield all([\n    takeLatest(types.FETCH_PRODUCTS.WATCHER, fetchProducts)\n  ])\n}\n"]},"metadata":{},"sourceType":"module"}